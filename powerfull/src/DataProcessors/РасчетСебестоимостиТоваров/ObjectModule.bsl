Процедура РассчитатьСебестоимость() Экспорт
	
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	ПоступлениеТоваров.Ссылка КАК Ссылка
	                |ИЗ
	                |	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	                |ГДЕ
	                |	ПоступлениеТоваров.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	                |	И ПоступлениеТоваров.Проведен";
	 
	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", Период.ДатаОкончания);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		  СформироватьДвиженияПоступление(Выборка.Ссылка);
		
	КонецЦикла;
	  
	  
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	РеализацияТоваров.Ссылка КАК Ссылка
	                |ИЗ
	                |	Документ.РеализацияТоваров КАК РеализацияТоваров
	                |ГДЕ
	                |	РеализацияТоваров.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	                |	И РеализацияТоваров.Проведен
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	РеализацияТоваров.Дата";
	 
	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", Период.ДатаОкончания);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		  НачатьТранзакцию();
		  
		  Попытка
			  СформироватьДвижениеРеализация(Выборка.Ссылка);
			  ЗафиксироватьТранзакцию();
		  Исключение
			  ОтменитьТранзакцию();
			  ВызватьИсключение;
		  КонецПопытки;
		
	КонецЦикла;
	  
КонецПроцедуры

Процедура СформироватьДвиженияПоступление(Ссылка)
	
	 ДокОбъект = Ссылка.ПолучитьОбъект();
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	ПоступлениеТоваровПоставкаТоваров.Товар КАК Товар,
	                |	ПоступлениеТоваровПоставкаТоваров.Количество КАК Количество,
	                |	ПоступлениеТоваровПоставкаТоваров.Сумма КАК Сумма
	                |ИЗ
	                |	Документ.ПоступлениеТоваров.ПоставкаТоваров КАК ПоступлениеТоваровПоставкаТоваров
	                |ГДЕ
	                |	ПоступлениеТоваровПоставкаТоваров.Ссылка = &Ссылка";
	 
	 Запрос.УстановитьПараметр("Ссылка", Ссылка);
	 
	 Выборка = Запрос.Выполнить().Выбрать();
	
	 ДокОбъект.Движения.СебестоимостьТоваров.Записывать = Истина;
	 
	 Пока Выборка.Следующий() Цикл
	 
		 Движение = ДокОбъект.Движения.СебестоимостьТоваров.ДобавитьПриход();
		 Движение.Период = ДокОбъект.Дата;
		 Движение.Товар = Выборка.Товар;
		 Движение.Количество = Выборка.Количество;
		 Движение.Сумма = Выборка.Сумма;
		 
	КонецЦикла;
	 
	 ДокОбъект.Движения.Записать();	 
	 
 КонецПроцедуры
 
Процедура СформироватьДвижениеРеализация(Ссылка)
	 
	 ДокОбъект = Ссылка.ПолучитьОбъект();
	 
	 Движения = ДокОбъект.Движения;
	 
	 Движения.СебестоимостьТоваров.Записывать = Истина; 
	 Движения.Записать();
	 
	 Блокировка = Новый БлокировкаДанных;
	 
	 ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СебестоимостьТоваров");
	 ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	 ЭлементБлокировки.ИсточникДанных = ДокОбъект.ПроданныеТовары;
	 ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Товар", "Товар");
	 
	 Блокировка.Заблокировать();
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	РеализацияТоваровПроданныеТовары.Товар КАК Товар,
	                |	СУММА(РеализацияТоваровПроданныеТовары.Количество) КАК Количество,
	                |	СУММА(РеализацияТоваровПроданныеТовары.Сумма) КАК Сумма
	                |ПОМЕСТИТЬ ВТ_ДанныеДокумента
	                |ИЗ
	                |	Документ.РеализацияТоваров.ПроданныеТовары КАК РеализацияТоваровПроданныеТовары
	                |ГДЕ
	                |	РеализацияТоваровПроданныеТовары.Ссылка = &Ссылка
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	РеализацияТоваровПроданныеТовары.Товар
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_ДанныеДокумента.Товар КАК Товар,
	                |	ВТ_ДанныеДокумента.Количество КАК Количество,
	                |	ВТ_ДанныеДокумента.Сумма КАК Сумма,
	                |	СебестоимостьТоваровОстатки.КоличествоОстаток КАК КоличествоОстаток,
	                |	СебестоимостьТоваровОстатки.СуммаОстаток КАК СуммаОстаток
	                |ИЗ
	                |	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров.Остатки(
	                |				&Период,
	                |				Товар В
	                |					(ВЫБРАТЬ
	                |						ВТ_ДанныеДокумента.Товар КАК Товар
	                |					ИЗ
	                |						ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК СебестоимостьТоваровОстатки
	                |		ПО ВТ_ДанныеДокумента.Товар = СебестоимостьТоваровОстатки.Товар";
					
					
					
	 Запрос.УстановитьПараметр("Ссылка", Ссылка);
	 Запрос.УстановитьПараметр("Период", ДокОбъект.МоментВремени());
	 
	 Выборка = Запрос.Выполнить().Выбрать();
	 
	 Движения.СебестоимостьТоваров.Записывать = Истина;
	 
	 Пока Выборка.Следующий() Цикл
		 
		Если Выборка.Количество > Выборка.КоличествоОстаток Тогда
			ШаблонОшибки = "Недостаточно товаров %1, для проведения документа %2";
			ВызватьИсключение СтрШаблон(ШаблонОшибки, Выборка.Товар, Ссылка);
		КонецЕсли;
		
		Если  Выборка.Количество = Выборка.КоличествоОстаток Тогда
			 Себестоимость = Выборка.СуммаОстаток;
		Иначе
			 Себестоимость = Выборка.СуммаОстаток * Выборка.Количество / Выборка.КоличествоОстаток;
		КонецЕсли;
		
		 Движение = Движения.СебестоимостьТоваров.ДобавитьРасход();
		 Движение.Период = ДокОбъект.Дата;
		 Движение.Товар = Выборка.Товар;
		 Движение.Количество = Выборка.Количество;
		 Движение.Сумма = Себестоимость;
		 		 
	 КонецЦикла;
	 
         Движения.Записать();
		 
КонецПроцедуры