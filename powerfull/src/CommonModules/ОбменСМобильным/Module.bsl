Функция ПодготовитьОтвет(ВходящееСообщение, ИдентификаторУстройства) Экспорт
	
	Узел = ПланыОбмена.Мобильный.НайтиПоКоду(ИдентификаторУстройства);
		
	Если Не ЗначениеЗаполнено(Узел) Тогда
		УзелОбъект = ПланыОбмена.Мобильный.СоздатьУзел();
		УзелОбъект.Код = ИдентификаторУстройства;
		УзелОбъект.Наименование = "Мобильное приложение";
		УзелОбъект.Записать();
		Узел = УзелОбъект.Ссылка;
		ПервичнаяРегистрация(Узел);
	КонецЕсли;
				
	Чтение = Новый ЧтениеXML;
	Чтение.УстановитьСтроку(ВходящееСообщение);
		
	ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения();
	ЧтениеСообщения.НачатьЧтение(Чтение, ДопустимыйНомерСообщения.Любой);
		
	Пока ВозможностьЧтенияXML(Чтение) Цикл
		
		Если Чтение.Имя = "DocumentObject.РеализацияТоваров" Тогда
			Объект = ПрочитатьЗаказПокупателя(Чтение);
		Иначе
			Объект = ПрочитатьXML(Чтение);
		КонецЕсли;
		Объект.Записать();
			
	КонецЦикла;
		
	ЧтениеСообщения.ЗакончитьЧтение();
	Чтение.Закрыть();
		
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку();
		
	ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
	ЗаписьСообщения.НачатьЗапись(Запись, Узел);
		
	ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(Узел, ЗаписьСообщения.НомерСообщения);
	Пока ВыборкаИзменений.Следующий() Цикл
		Данные = ВыборкаИзменений.Получить();
		ЗаписатьXML(ЗаписьСообщения.ЗаписьXML, Данные);
	КонецЦикла;
		
	ЗаписьСообщения.ЗакончитьЗапись();
		
	ТелоОтвета = Запись.Закрыть();
	
	Возврат ТелоОтвета;
	
КонецФункции

Функция ПрочитатьЗаказПокупателя(Чтение) 
	
	Объект = Документы.РеализацияТоваров.СоздатьДокумент();
	
	Пока Чтение.Прочитать() Цикл
		
		Если Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда	
			Если Чтение.Имя = "Ref" Тогда
				Чтение.Прочитать();
				ИдентификаторДокумента = Чтение.Значение;
				Ссылка = Документы.РеализацияТоваров.ПолучитьСсылку(Новый УникальныйИдентификатор(ИдентификаторДокумента));
				Объект = Ссылка.ПолучитьОбъект();
				Если Объект = Неопределено Тогда
					Объект = Документы.РеализацияТоваров.СоздатьДокумент();
					Объект.УстановитьСсылкуНового(Ссылка);
				КонецЕсли;
			КонецЕсли;
			
			Если Чтение.Имя = "СуммаДокумента" Тогда
				Чтение.Прочитать();
				Объект.СуммаДокумента = Чтение.Значение;
			КонецЕсли;
			
			Если Чтение.Имя = "Комментарий" Тогда
				Чтение.Прочитать();
				Объект.Комментарий = Чтение.Значение;
			КонецЕсли;
			
			Если Чтение.Имя = "ТипОплаты" Тогда
                Чтение.Прочитать();
                Объект.ТипОплаты = ПреобразоватьТипОплаты(Чтение.Значение);
            КонецЕсли;
			
			Если Чтение.Имя = "ПроданныеТовары" Тогда
                ПрочитатьТабличнуюЧасть(Чтение, Объект.ПроданныеТовары);
            КонецЕсли;
			
		КонецЕсли;
		
		Если Чтение.Имя = "DocumentObject.РеализацияТоваров" Тогда
			Чтение.Прочитать();
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Объект.Дата = ТекущаяДата(); 
	
	Возврат Объект;
	
КонецФункции

Функция ПреобразоватьТипОплаты(ЗначениеИзXML)

    Для Каждого Элемент Из Перечисления.Оплата Цикл
        Если Строка(Элемент) = ЗначениеИзXML Тогда
            Возврат Элемент;
        КонецЕсли;
    КонецЦикла;

    Сообщить("Тип оплаты '" + ЗначениеИзXML + "' не найден в перечислении. Установлено значение по умолчанию.");
    Возврат Перечисления.Оплата.Карта; // Замените на значение по умолчанию

КонецФункции



Процедура ПрочитатьТабличнуюЧасть(Чтение, ТабличнаяЧасть)
    
    Пока Чтение.Прочитать() Цикл
        Если Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
            Если Чтение.Имя = "Row" Тогда
                Строка = ТабличнаяЧасть.Добавить();
                
                Пока Чтение.Прочитать() Цикл
                    Если Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
                        Если Чтение.Имя = "Товар" Тогда
                            Чтение.Прочитать();
                            ЗначениеТовара = Чтение.Значение;
                            
                            // Проверяем, является ли значение ссылкой или кодом
                            Попытка
                                УникальныйИдентификаторТовара = Новый УникальныйИдентификатор(ЗначениеТовара);
                                Строка.Товар = Справочники.Товары.ПолучитьСсылку(УникальныйИдентификаторТовара);
                            Исключение
                                Строка.Товар = Справочники.Товары.НайтиПоКоду(ЗначениеТовара);
                            КонецПопытки;

                            Если Строка.Товар = Неопределено Тогда
                                Сообщить("Товар с идентификатором " + ЗначениеТовара + " не найден.");
                            КонецЕсли;
                        КонецЕсли;
                        
                        Если Чтение.Имя = "Количество" Тогда
                            Чтение.Прочитать();
                            Строка.Количество = Число(Чтение.Значение);
                        КонецЕсли;

                        Если Чтение.Имя = "Цена" Тогда
                            Чтение.Прочитать();
                            Строка.Цена = Число(Чтение.Значение);
                        КонецЕсли;

                        Если Чтение.Имя = "Сумма" Тогда
                            Чтение.Прочитать();
                            Строка.Сумма = Число(Чтение.Значение);
                        КонецЕсли;
                    КонецЕсли;
                    
                    Если Чтение.ТипУзла = ТипУзлаXML.КонецЭлемента И Чтение.Имя = "Row" Тогда
                        Прервать;
                    КонецЕсли;
                КонецЦикла;
            КонецЕсли;
        КонецЕсли;

        Если Чтение.ТипУзла = ТипУзлаXML.КонецЭлемента И Чтение.Имя = "ПроданныеТовары" Тогда
            Прервать;
        КонецЕсли;
    КонецЦикла;

КонецПроцедуры

Процедура ПервичнаяРегистрация(Узел)
	
	ПланыОбмена.ЗарегистрироватьИзменения(Узел, Метаданные.Справочники.Товары);
	ПланыОбмена.ЗарегистрироватьИзменения(Узел, Метаданные.РегистрыСведений.ЦеныНаСпортТовары);
	
КонецПроцедуры